{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "logicAppName": {
            "type": "String",
            "metadata": {
                "description": "Name of the logic app."
            }
        },
        "logicAppLocation": {
            "defaultValue": "[resourceGroup().location]",
            "allowedValues": [
                "eastasia",
                "southeastasia",
                "centralus",
                "eastus",
                "eastus2",
                "westus",
                "northcentralus",
                "southcentralus",
                "northeurope",
                "westeurope",
                "japanwest",
                "japaneast",
                "brazilsouth",
                "australiaeast",
                "australiasoutheast",
                "southindia",
                "centralindia",
                "westindia",
                "canadacentral",
                "canadaeast",
                "westcentralus",
                "westus2",
                "[resourceGroup().location]"
            ],
            "type": "String",
            "metadata": {
                "description": "Location of the logic app."
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('logicAppName')]",
            "apiVersion": "2016-06-01",
            "location": "[parameters('logicAppLocation')]",
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "$authentication": {
                            "defaultValue": {},
                            "type": "SecureObject"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Button",
                            "inputs": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "text": {
                                            "title": "Module",
                                            "type": "string",
                                            "x-ms-dynamically-added": true,
                                            "description": "Account",
                                            "x-ms-content-hint": "TEXT"
                                        }
                                    },
                                    "required": [
                                        "text"
                                    ]
                                }
                            }
                        }
                    },
                    "actions": {
                        "getFields_for_Account": {
                            "runAfter": {
                                "Variable_initialisieren": [
                                    "Succeeded"
                                ]
                            },
                            "metadata": {
                                "flowSystemMetadata": {
                                    "swaggerOperationId": "MetaFieldsModule"
                                }
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$connections']['1crm-20meta-20connector-5f0cba6af504460ced-5f27ffb7cd12da7930']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(triggerBody()['text'])}",
                                "authentication": {
                                    "type": "Raw",
                                    "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                                }
                            }
                        },
                        "Verfassen": {
                            "runAfter": {
                                "Variable_fieldsObject": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": "@xpath(xml(json(concat('{ \"root\": ', string(body('getFields_for_Account')), ' }'))), '/root/fields/*')",
                            "description": "xpath(xml(json(concat('{ \"root\": ', string(body('getFields_for_Account')?['fields']), ' }'))), '/root/fields/*')"
                        },
                        "Auswählen": {
                            "runAfter": {
                                "Verfassen": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Select",
                            "inputs": {
                                "from": "@outputs('Verfassen')",
                                "select": {
                                    "name": "@xpath(item(),'name(/*)')",
                                    "vname": "@xpath(item(), 'string(/*/vname)')",
                                    "type": "@xpath(item(), 'string(/*/type)')",
                                    "options": "@xpath(item(), 'string(/*/options)')",
                                    "required": "@xpath(item(), 'string(/*/required)')",
                                    "editable": "@xpath(item(), 'string(/*/editable)')"
                                }
                            }
                        },
                        "Variable_openApiBase": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "openApiBase",
                                        "type": "Object"
                                    }
                                ]
                            }
                        },
                        "Auf_alle_anwenden": {
                            "foreach": "@body('Auswählen')",
                            "actions": {
                                "tmp_objekt_mit_aktuellem_feld": {
                                    "runAfter": {
                                        "typ_anpassen": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "tmp_obj",
                                        "value": "@setProperty(variables('fieldsObject'), 'properties', setProperty(variables('fieldsObject')['properties'],string(item()['name']), outputs('typ_anpassen')))"
                                    },
                                    "description": "addProperty(variables('fieldsObject')['properties'], item()['name'], outputs('Verfassen_2'))"
                                },
                                "fieldsObject_updaten": {
                                    "runAfter": {
                                        "tmp_objekt_mit_aktuellem_feld": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "fieldsObject",
                                        "value": "@variables('tmp_obj')"
                                    }
                                },
                                "typ_anpassen": {
                                    "runAfter": {},
                                    "type": "Compose",
                                    "inputs": {
                                        "type": "@{if(equals(item()['type'], 'bool'), 'boolean', if(equals(item()['type'], 'int'), 'integer', if(contains(createArray('currency', 'base_currency', 'float'), item()['type']), 'number', 'string')) )}"
                                    },
                                    "description": "if(equals(item()['type'], 'bool'), 'boolean', if(equals(item()['type'], 'int'), 'integer', if(contains(createArray('currency', 'base_currency', 'float'), item()['type']), 'number', 'string')) )"
                                },
                                "Variable_festlegen": {
                                    "runAfter": {
                                        "fieldsObject_updaten": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "tmp_obj",
                                        "value": "@if(and(equals(item()['required'], 'true'), not(equals(item()['editable'], 'false'))) ,setProperty(variables('fieldsObject'), 'required', union(variables('fieldsObject')['required'], createArray(item()['name']))), variables('fieldsObject'))"
                                    }
                                },
                                "Variable_festlegen_2": {
                                    "runAfter": {
                                        "Variable_festlegen": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "fieldsObject",
                                        "value": "@variables('tmp_obj')"
                                    }
                                }
                            },
                            "runAfter": {
                                "Auswählen": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Variable_fieldsObject": {
                            "runAfter": {
                                "getFields_for_Account": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "fieldsObject",
                                        "type": "Object",
                                        "value": {
                                            "type": "object",
                                            "properties": {},
                                            "required": [],
                                            "description": "1CRM @{triggerBody()['text']} Entity"
                                        }
                                    }
                                ]
                            },
                            "description": "TODO: Modul dynamisch aus getFields holen"
                        },
                        "Variable_initialisieren": {
                            "runAfter": {
                                "openApiBase_Basiswert": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "tmp_obj",
                                        "type": "Object"
                                    }
                                ]
                            }
                        },
                        "openApiBase_Basiswert": {
                            "runAfter": {
                                "Variable_openApiBase": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "openApiBase",
                                "value": {
                                    "swagger": "2.0",
                                    "info": {
                                        "title": "1CRM API",
                                        "description": "1CRM API to list, read and write Data to 1CRM",
                                        "version": "1.0.0"
                                    },
                                    "host": "demo.1crm.de",
                                    "basePath": "/api.php",
                                    "schemes": [
                                        "https"
                                    ],
                                    "security": [
                                        {
                                            "basicAuth": []
                                        }
                                    ],
                                    "securityDefinitions": {
                                        "basicAuth": {
                                            "type": "basic"
                                        }
                                    },
                                    "paths": {
                                        "/data/@{triggerBody()['text']}": {
                                            "get": {
                                                "operationId": "get@{triggerBody()['text']}List",
                                                "parameters": [
                                                    {
                                                        "in": "query",
                                                        "name": "fields",
                                                        "x-ms-summary": "The fields to fetch",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "required": false,
                                                        "description": "Array of field names to fetch. When omitted, a limited number of fields are returned, depending on model. Record ID is guaranteed to be returned, and for most models, name and/or _display fields."
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "query_favorite",
                                                        "type": "boolean",
                                                        "x-ms-visibility": "advanced",
                                                        "required": false,
                                                        "description": "Query favorites. If set, favorite field will be added to each result row, indicating whether the current user added the item to Favorites. Note that item is in favorites if and only if the value of favorite field is zero"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "filter_text",
                                                        "type": "string",
                                                        "required": false,
                                                        "description": "Generic search string. Fields involved in search depend on model"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "filters",
                                                        "x-ms-visibility": "advanced",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "required": false,
                                                        "description": "Filters to apply. To get list of available filters for a model, use metadata. Format: filter[name]=SearchName (deepobject in OpenApi3)"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "order",
                                                        "type": "string",
                                                        "x-ms-visibility": "advanced",
                                                        "required": false,
                                                        "description": "Sort Order"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "offset",
                                                        "type": "integer",
                                                        "x-ms-visibility": "advanced",
                                                        "required": false,
                                                        "description": "Offset in the list to start retrieval from"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "limit",
                                                        "type": "integer",
                                                        "x-ms-visibility": "advanced",
                                                        "required": false,
                                                        "description": "Limits number of records returned"
                                                    }
                                                ],
                                                "description": "Get @{triggerBody()['text']} List",
                                                "produces": [
                                                    "application/json"
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "a json Object with @{triggerBody()['text']} Array and information of total count",
                                                        "schema": {
                                                            "type": "object",
                                                            "properties": {
                                                                "total_count": {
                                                                    "type": "integer"
                                                                },
                                                                "records": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "$ref": "#/definitions/@{triggerBody()['text']}"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "summary": "get @{triggerBody()['text']} List from 1CRM"
                                            },
                                            "post": {
                                                "operationId": "create@{triggerBody()['text']}",
                                                "parameters": [
                                                    {
                                                        "description": "@{triggerBody()['text']} object to be added to 1CRM",
                                                        "in": "body",
                                                        "name": "@{triggerBody()['text']}",
                                                        "required": true,
                                                        "schema": {
                                                            "properties": {
                                                                "data": {
                                                                    "$ref": "#/definitions/@{triggerBody()['text']}"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                ],
                                                "description": "Create a @{triggerBody()['text']}",
                                                "produces": [
                                                    "application/json"
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "a json Object with @{triggerBody()['text']} Array and information of total count",
                                                        "schema": {
                                                            "type": "object",
                                                            "properties": {
                                                                "id": {
                                                                    "type": "string",
                                                                    "description": "ID of the newly created @{triggerBody()['text']}"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "summary": "create new @{triggerBody()['text']}"
                                            }
                                        },
                                        "/data/@{triggerBody()['text']}/{id}": {
                                            "get": {
                                                "operationId": "getSingle@{triggerBody()['text']}",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "id",
                                                        "type": "string",
                                                        "required": true,
                                                        "description": "The id of the record to be fetched"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "fields",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "required": false,
                                                        "description": "Array of field names to fetch. When omitted, all available fields are returned."
                                                    }
                                                ],
                                                "description": "Get single @{triggerBody()['text']} Object",
                                                "produces": [
                                                    "application/json"
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "a json Object with @{triggerBody()['text']} record",
                                                        "schema": {
                                                            "type": "object",
                                                            "properties": {
                                                                "record": {
                                                                    "$ref": "#/definitions/@{triggerBody()['text']}"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "summary": "get single @{triggerBody()['text']} Object from 1CRM"
                                            },
                                            "patch": {
                                                "operationId": "updateSingle@{triggerBody()['text']}",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "id",
                                                        "type": "string",
                                                        "required": true,
                                                        "description": "The id of the record to be updated"
                                                    },
                                                    {
                                                        "description": "@{triggerBody()['text']} object to be updated in 1CRM",
                                                        "in": "body",
                                                        "name": "@{triggerBody()['text']}",
                                                        "required": true,
                                                        "schema": {
                                                            "required": [
                                                                "data"
                                                            ],
                                                            "properties": {
                                                                "data": {
                                                                    "$ref": "#/definitions/@{triggerBody()['text']}"
                                                                },
                                                                "create": {
                                                                    "type": "boolean",
                                                                    "description": "If true, record will be created if it does not exist"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                ],
                                                "description": "Get single @{triggerBody()['text']} Object",
                                                "produces": [
                                                    "application/json"
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "always true",
                                                        "schema": {
                                                            "type": "object",
                                                            "properties": {
                                                                "result": {
                                                                    "type": "boolean",
                                                                    "description": "always true"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "summary": "update @{triggerBody()['text']} in 1CRM"
                                            },
                                            "delete": {
                                                "operationId": "deleteSingle@{triggerBody()['text']}",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "id",
                                                        "type": "string",
                                                        "required": true,
                                                        "description": "The id of the record to be deleted"
                                                    }
                                                ],
                                                "produces": [
                                                    "application/json"
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "true if deleted",
                                                        "schema": {
                                                            "type": "object",
                                                            "properties": {
                                                                "result": {
                                                                    "type": "boolean",
                                                                    "description": "true if deleted"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "summary": "delete @{triggerBody()['text']} in 1CRM"
                                            }
                                        },
                                        "/webhooks": {
                                            "x-ms-notification-content": {
                                                "schema": {
                                                    "type": "object",
                                                    "$ref": "#/definitions/@{triggerBody()['text']}"
                                                },
                                                "description": "The @{triggerBody()['text']} fields"
                                            },
                                            "post": {
                                                "responses": {},
                                                "x-ms-trigger": "single",
                                                "summary": "When an @{triggerBody()['text']} is created or updated",
                                                "description": "This operation triggers when an @{triggerBody()['text']} is created  or updated in 1CRM",
                                                "operationId": "createUpdate@{triggerBody()['text']}Webhook",
                                                "parameters": [
                                                    {
                                                        "name": "body",
                                                        "in": "body",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "description": "Event Type",
                                                                    "title": "Event Type",
                                                                    "enum": [
                                                                        "create",
                                                                        "update",
                                                                        "create_update"
                                                                    ]
                                                                },
                                                                "url": {
                                                                    "type": "string",
                                                                    "description": "url",
                                                                    "x-ms-notification-url": true,
                                                                    "title": "",
                                                                    "x-ms-visibility": "internal"
                                                                },
                                                                "model": {
                                                                    "type": "string",
                                                                    "description": "1CRM Object Model",
                                                                    "title": "Model",
                                                                    "default": "@{triggerBody()['text']}",
                                                                    "x-ms-visibility": "internal"
                                                                },
                                                                "filters": {
                                                                    "type": "object",
                                                                    "description": "1CRM Webhook Filter Object, see developer documentation",
                                                                    "properties": {
                                                                        "glue": {
                                                                            "type": "string",
                                                                            "example": "or"
                                                                        },
                                                                        "conditions": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "field": {
                                                                                        "type": "string",
                                                                                        "example": "first_name"
                                                                                    },
                                                                                    "filter": {
                                                                                        "type": "string",
                                                                                        "example": "eq"
                                                                                    },
                                                                                    "value": {
                                                                                        "type": "string",
                                                                                        "example": "John"
                                                                                    },
                                                                                    "when": {
                                                                                        "type": "string",
                                                                                        "example": "current_value"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "default": {
                                                                        "glue": "or",
                                                                        "conditions": [
                                                                            {
                                                                                "field": "deleted",
                                                                                "filter": "is_false",
                                                                                "value": "0",
                                                                                "when": "current_value"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "x-ms-visibility": "advanced"
                                                                }
                                                            },
                                                            "required": [
                                                                "url",
                                                                "model",
                                                                "type",
                                                                "filters"
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "definitions": {}
                                }
                            }
                        },
                        "definitionsObjectBauen": {
                            "runAfter": {
                                "Auf_alle_anwenden": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": {
                                "@{triggerBody()['text']}": "@variables('fieldsObject')"
                            }
                        },
                        "definitionsInOpenApiBaseEinfuegen": {
                            "runAfter": {
                                "definitionsObjectBauen": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": "@setProperty(variables('openApiBase'), 'definitions', outputs('definitionsObjectBauen'))"
                        },
                        "Datei_erstellen": {
                            "runAfter": {
                                "definitionsInOpenApiBaseEinfuegen": [
                                    "Succeeded"
                                ]
                            },
                            "metadata": {
                                "flowSystemMetadata": {
                                    "swaggerOperationId": "CreateFile"
                                }
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$connections']['onedriveforbusiness']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": "@outputs('definitionsInOpenApiBaseEinfuegen')",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/vorlagen/OpenAPI",
                                    "name": "1crm@{triggerBody()['text']}.swagger.json"
                                },
                                "authentication": {
                                    "type": "Raw",
                                    "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        }
                    },
                    "description": "This Flow lets you enter a 1CRM module name. It will then save an OpenAPI json file to your OneDrive account. This file can be used with swagger to build arbitary clients, or with Microsoft flow to create a new 1CRM connector."
                },
                "parameters": {},
                "runtimeConfiguration": {
                    "lifetime": {
                        "unit": "Day",
                        "count": 30
                    },
                    "collections": {
                        "maximumItemCount": 100000
                    },
                    "performanceProfile": {
                        "throttles": {
                            "mode": "Medium"
                        }
                    }
                }
            }
        }
    ]
}